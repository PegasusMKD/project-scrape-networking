use super::AttributeData;

#[repr(C)]
#[derive(Debug, Clone, PartialEq, Eq)]
pub enum AttributeDataFormat {
    Uint8x2 = 0,
    Uint8x4 = 1,
    Sint8x2 = 2,
    Sint8x4 = 3,
    Unorm8x2 = 4,
    Unorm8x4 = 5,
    Snorm8x2 = 6,
    Snorm8x4 = 7,
    Uint16x2 = 8,
    Uint16x4 = 9,
    Sint16x2 = 10,
    Sint16x4 = 11,
    Unorm16x2 = 12,
    Unorm16x4 = 13,
    Snorm16x2 = 14,
    Snorm16x4 = 15,
    // Float16x2 = 16,
    // Float16x4 = 17,
    Float32 = 18,
    Float32x2 = 19,
    Float32x3 = 20,
    Float32x4 = 21,
    Uint32 = 22,
    Uint32x2 = 23,
    Uint32x3 = 24,
    Uint32x4 = 25,
    // Sint32 = 26,
    // Sint32x2 = 27,
    // Sint32x3 = 28,
    // Sint32x4 = 29,
    // Float64 = 30,
    // Float64x2 = 31,
    // Float64x3 = 32,
    // Float64x4 = 33,
}

impl From<&AttributeData> for AttributeDataFormat {
    fn from(values: &AttributeData) -> Self {
        match values {
            AttributeData::Float32(_) => AttributeDataFormat::Float32,
            // AttributeData::Sint32(_) => AttributeDataFormat::Sint32,
            AttributeData::Uint32(_) => AttributeDataFormat::Uint32,
            AttributeData::Float32x2(_) => AttributeDataFormat::Float32x2,
            // AttributeData::Sint32x2(_) => AttributeDataFormat::Sint32x2,
            AttributeData::Uint32x2(_) => AttributeDataFormat::Uint32x2,
            AttributeData::Float32x3(_) => AttributeDataFormat::Float32x3,
            // AttributeData::Sint32x3(_) => AttributeDataFormat::Sint32x3,
            AttributeData::Uint32x3(_) => AttributeDataFormat::Uint32x3,
            AttributeData::Float32x4(_) => AttributeDataFormat::Float32x4,
            // AttributeData::Sint32x4(_) => AttributeDataFormat::Sint32x4,
            AttributeData::Uint32x4(_) => AttributeDataFormat::Uint32x4,
            AttributeData::Sint16x2(_) => AttributeDataFormat::Sint16x2,
            AttributeData::Snorm16x2(_) => AttributeDataFormat::Snorm16x2,
            AttributeData::Uint16x2(_) => AttributeDataFormat::Uint16x2,
            AttributeData::Unorm16x2(_) => AttributeDataFormat::Unorm16x2,
            AttributeData::Sint16x4(_) => AttributeDataFormat::Sint16x4,
            AttributeData::Snorm16x4(_) => AttributeDataFormat::Snorm16x4,
            AttributeData::Uint16x4(_) => AttributeDataFormat::Uint16x4,
            AttributeData::Unorm16x4(_) => AttributeDataFormat::Unorm16x4,
            AttributeData::Sint8x2(_) => AttributeDataFormat::Sint8x2,
            AttributeData::Snorm8x2(_) => AttributeDataFormat::Snorm8x2,
            AttributeData::Uint8x2(_) => AttributeDataFormat::Uint8x2,
            AttributeData::Unorm8x2(_) => AttributeDataFormat::Unorm8x2,
            AttributeData::Sint8x4(_) => AttributeDataFormat::Sint8x4,
            AttributeData::Snorm8x4(_) => AttributeDataFormat::Snorm8x4,
            AttributeData::Uint8x4(_) => AttributeDataFormat::Uint8x4,
            AttributeData::Unorm8x4(_) => AttributeDataFormat::Unorm8x4,
        }
    }
}
